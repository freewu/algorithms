package main

// LCR 185. 统计结果概率
// 你选择掷出 num 个色子，请返回所有点数总和的概率。
// 你需要用一个浮点数数组返回答案，其中第 i 个元素代表这 num 个骰子所能掷出的点数集合中第 i 小的那个的概率。

// 示例 1：
// 输入：num = 3
// 输出：[0.00463,0.01389,0.02778,0.04630,0.06944,0.09722,0.11574,0.12500,0.12500,0.11574,0.09722,0.06944,0.04630,0.02778,0.01389,0.00463]

// 示例 2：
// 输入：num = 5
// 输出:[0.00013,0.00064,0.00193,0.00450,0.00900,0.01620,0.02636,0.03922,0.05401,0.06944,0.08372,0.09452,0.10031,0.10031,0.09452,0.08372,0.06944,0.05401,0.03922,0.02636,0.01620,0.00900,0.00450,0.00193,0.00064,0.00013]

// 提示：
//     1 <= num <= 11

import "fmt"

func statisticsProbability(num int) []float64 {
    dp := make([]float64, num * 6 + 1)
    for i := 1; i <= 6; i++ {
        dp[i] = 1/6.0
    }
    for i := 2; i <= num; i++ {
        for j := i * 6; j >= i; j-- {
            dp[j] = 0
            for k := 1; k <= 6; k++ {
                if j-k >= i-1 {
                    dp[j] += dp[j-k]/6.0
                } else {
                    break
                }
            }
        }
    }
    return dp[num:num*6+1]
}

func main() {
    // 示例 1：
    // 输入：num = 3
    // 输出：[0.00463,0.01389,0.02778,0.04630,0.06944,0.09722,0.11574,0.12500,0.12500,0.11574,0.09722,0.06944,0.04630,0.02778,0.01389,0.00463]
    fmt.Println(statisticsProbability(3))
    // 示例 2：
    // 输入：num = 5
    // 输出:[0.00013,0.00064,0.00193,0.00450,0.00900,0.01620,0.02636,0.03922,0.05401,0.06944,0.08372,0.09452,0.10031,0.10031,0.09452,0.08372,0.06944,0.05401,0.03922,0.02636,0.01620,0.00900,0.00450,0.00193,0.00064,0.00013]
    fmt.Println(statisticsProbability(5))
}